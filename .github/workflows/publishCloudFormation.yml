# This is a basic workflow to help you get started with Actions

name: CI

# Controls when the action will run. Triggers the workflow on push or pull request
# events but only for the master branch
on:
  push:
    branches: [master]
  pull_request:
    branches: [master]

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  BuildWebSite:
    runs-on: ubuntu-latest
    steps:
      - name: Clone repository
        uses: actions/checkout@v2
      - name: Use Node.js 12.x
        uses: actions/setup-node@v1
        with:
          node-version: 12.x
      - name: Install dependencies
        run: npm  install
        working-directory: site
      - name: Generate build
        run: npm run build # Share artifact inside workflow
        working-directory: site
      - name: Share artifact inside workflow
        uses: actions/upload-artifact@v1
        with:
          name: site-build
          path: site/build

  DeploySite:
    needs: BuildWebSite
    # The type of runner that the job will run on
    runs-on: ubuntu-latest
    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v2
      # Download previously shared build
      - name: Get artifact
        uses: actions/download-artifact@v4.1.7
        with:
          name: site-build

      - name: Load AWS Credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ secrets.AWS_REGION }}
      - name: Deploy Main Stack
        id: CloudFormationStep
        uses: alexjurkiewicz/cfn-deploy@v2.0.1
        with:
          stackName: ${{ secrets.AWS_STACK_NAME }}
          templateFile: "DeploymentTools/CloudFormation/WebsiteFormation/MasterTemplate.yml"
          parameters: DomainName=${{ secrets.DOMAIN_NAME }} AcmCertificateArn=${{ secrets.CERTIFICATE_ARN }} FullDomainName=${{ secrets.FULL_DOMAIN_NAME }}
      - name: Deploy to S3
        uses: jakejarvis/s3-sync-action@master
        with:
          args: --acl public-read --delete
        env:
          AWS_S3_BUCKET: ${{ steps.CloudFormationStep.outputs.cf_output_BucketName }}
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          AWS_REGION: ${{ secrets.AWS_REGION }}
          SOURCE_DIR: "site-build"

      - name: Invalidate Cloud Front
        uses: chetan/invalidate-cloudfront-action@master
        env:
          DISTRIBUTION: ${{ steps.CloudFormationStep.outputs.cf_output_CloudFrontDistr }}
          PATHS: "/index.html"
          AWS_REGION: ${{ secrets.AWS_REGION }}
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
